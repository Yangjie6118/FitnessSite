# Generated by Django 2.2.7 on 2020-03-19 01:34

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='文章分类名')),
                ('index', models.IntegerField(default=0, verbose_name='分类排序')),
            ],
            options={
                'verbose_name': '文章类别',
                'verbose_name_plural': '文章类别',
            },
        ),
        migrations.CreateModel(
            name='DietPlanCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='饮食计划分类名')),
                ('index', models.IntegerField(default=0, verbose_name='分类排序')),
            ],
            options={
                'verbose_name': '饮食计划分类',
                'verbose_name_plural': '饮食计划分类',
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='食物类别')),
                ('picture', models.ImageField(blank=True, upload_to='FoodCategory_img', verbose_name='食物类图片')),
                ('txt_info', models.CharField(default='', max_length=50, verbose_name='食物简介')),
                ('index', models.IntegerField(default=0, verbose_name='分类排序')),
            ],
            options={
                'verbose_name': '食物分类',
                'verbose_name_plural': '食物分类',
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='链接名称')),
                ('link_url', models.URLField(max_length=100, verbose_name='网址')),
            ],
            options={
                'verbose_name': '友情链接',
                'verbose_name_plural': '友情链接',
            },
        ),
        migrations.CreateModel(
            name='MuscleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='肌肉部位名')),
                ('index', models.IntegerField(default=0, verbose_name='分类排序')),
            ],
            options={
                'verbose_name': '肌肉部位分类',
                'verbose_name_plural': '肌肉部位分类',
            },
        ),
        migrations.CreateModel(
            name='MuscleTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='肌肉标签')),
            ],
            options={
                'verbose_name': '肌肉标签',
                'verbose_name_plural': '肌肉标签',
            },
        ),
        migrations.CreateModel(
            name='Recommend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='推荐位置')),
            ],
            options={
                'verbose_name': '推荐位',
                'verbose_name_plural': '推荐位',
            },
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_info', models.CharField(default='', max_length=50, verbose_name='图片标题')),
                ('img', models.ImageField(upload_to='Slide_img', verbose_name='幻灯图片')),
                ('link_url', models.URLField(max_length=100, verbose_name='图片链接')),
                ('is_active', models.BooleanField(default=False, verbose_name='是否动态')),
            ],
            options={
                'verbose_name': '幻灯片',
                'verbose_name_plural': '幻灯片',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='文章标签')),
            ],
            options={
                'verbose_name': '文章标签',
                'verbose_name_plural': '文章标签',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='训练计划模块标题')),
                ('abstract', models.CharField(max_length=100, verbose_name='文章摘要')),
                ('picture', models.ImageField(blank=True, upload_to='Plan_img', verbose_name='训练计划图片')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('change_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('tags', models.ManyToManyField(to='FitnessArticle.MuscleTag', verbose_name='肌肉标签')),
            ],
            options={
                'verbose_name': '训练计划',
                'verbose_name_plural': '训练计划',
            },
        ),
        migrations.CreateModel(
            name='Muscle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='肌肉模块标题')),
                ('picture', models.ImageField(blank=True, upload_to='Muscle_img', verbose_name='肌肉图片')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('change_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FitnessArticle.MuscleCategory', verbose_name='肌肉分类')),
                ('tags', models.ManyToManyField(to='FitnessArticle.MuscleTag', verbose_name='肌肉标签')),
            ],
            options={
                'verbose_name': '肌肉',
                'verbose_name_plural': '肌肉',
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='食物名')),
                ('picture', models.ImageField(blank=True, upload_to='Food_img', verbose_name='食物图片')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('change_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FitnessArticle.FoodCategory', verbose_name='食物类别')),
            ],
            options={
                'verbose_name': '食物',
                'verbose_name_plural': '食物',
            },
        ),
        migrations.CreateModel(
            name='DietPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='饮食计划标题')),
                ('picture', models.ImageField(blank=True, upload_to='DietPlan_img', verbose_name='饮食计划图片')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('change_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FitnessArticle.DietPlanCategory', verbose_name='分类')),
            ],
            options={
                'verbose_name': '饮食计划',
                'verbose_name_plural': '饮食计划',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='标题')),
                ('picture', models.ImageField(blank=True, upload_to='Article_img/%Y/%m/%d/', verbose_name='文章图片')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('reading', models.PositiveIntegerField(default=0, verbose_name='阅读量')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('change_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作者')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FitnessArticle.ArticleCategory', verbose_name='分类')),
                ('recommend', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FitnessArticle.Recommend', verbose_name='热门推荐')),
                ('tags', models.ManyToManyField(to='FitnessArticle.Tag', verbose_name='标签')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
            },
        ),
    ]
